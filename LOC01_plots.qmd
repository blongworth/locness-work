---
title: "Basic_LOC01_plots"
format: html
editor: visual
---

Basic LOC01 plots from Jennie's python notebook, translated to R.

```{r}
library(tidyverse)
library(skimr)
library(patchwork)
#library(maps)
library(janitor)
library(lubridate)
library(leaflet)

theme_set(theme_classic())
```

# Data

```{r}
loc01_underway <- "data/LOC-01_Underway_continuous.txt"
loc01_drifter_comp <- "data/Drifter_compiled.csv"
loc01_drifters <- list.files(path = "data",
                             pattern = "LOC-01_Drifter",
                             full.names = TRUE)
loc01_ctd <- "data/CTD_downcast_upcast.csv"
```

### Underway

```{r}
uw_df <- read_csv(loc01_underway,
                     na = c("", "NA", "NaN"),
                     col_types = "cnninnnnnncni",
                     ) |> 
  mutate(DateTime_UTC = as.POSIXct(DateTime_UTC, 
                                   format = "%d-%b-%Y %H:%M:%S", 
                                   tz = "UTC"),
         Salinity_PSU = ifelse(Salinity_PSU < 29, NA, Salinity_PSU))


uw_dye_df <- uw_df |> 
  filter(DateTime_UTC > as.POSIXct("2023-09-02 12:00:00", tz = "UTC"),
         DateTime_UTC < as.POSIXct("2023-09-04 01:30:00", tz = "UTC"))
```

### CTD

```{r}
ctd_df <- read_csv(loc01_ctd) |> 
  clean_names()
```

Need per-cast info: station, cast, in-out, start timestamp, start lat, start lon

```{r}
ctd_loc <- ctd_df |> 
  mutate(timestamp = as.POSIXct(paste(start_date, as.character(start_time_utc)), format="%m/%d/%y %H:%M:%S")) |> 
  select(station, cast, in_out, 
         timestamp,
         lat = longitude_deg, lon = longitude_deg_2) |> 
  distinct(station, cast, .keep_all = TRUE)
ctd_loc
```

```{r}
#|fig-height: 800
ggplot(ctd_df, aes(dep_sm_salt_water_m, rhodfl_tc0_ppb, color = upcast_downcast)) +
  geom_line() +
  coord_flip() +
  scale_y_log10() +
  scale_x_reverse() +
  facet_grid(rows = vars(in_out), cols = vars(station, cast))
```

### Drifters

```{r}
drifter_df <- read_csv(loc01_drifter_comp,
                       na = c("", "NA", "NaN")) |> 
  clean_names() |> 
  mutate(date_time_utc = mdy_hm(date_time_utc)) |> 
  rename(latitude = lattitude) |> 
  filter(latitude < 41.5)
```

```{r}
drifter_df |> 
  ggplot(aes(date_time_utc, sensor_ppb, color = sensor_ppb)) +
  geom_point() +
  scale_y_log10()
```

```{r}
# Create a palette that maps factor levels to colors
pal_fac <- colorFactor(c("red", "navy"), domain = ctd_loc$in_out)

#pal_rho <- colorQuantile("magma", drifter_df[["Dye_ppb"]], n = 10)
pal_rho <- colorQuantile("magma", uw_dye_df[["sensor_ppb"]], n = 50)

leaflet(drifter_df) |> 
  addTiles() |> 
  addCircleMarkers(lng = ~longitude,
             lat = ~latitude,
             color = ~pal_rho(sensor_ppb),
             popup = ~asset,
             radius = 2,
             stroke = FALSE,
             fillOpacity = 0.5) |> 
  addCircleMarkers(
    data = uw_dye_df,
    radius = 2,
    stroke = FALSE,
    fillOpacity = 0.5,
    color = ~pal_rho(uw_dye_df[["Dye_ppb"]])) |> 
  addCircleMarkers(
    data = ctd_loc,
    color = ~pal_fac(in_out)
  )
```

# Timeseries

### Underway

```{r}
dye_plot <- ggplot(uw_dye_df, aes(DateTime_UTC, Dye_ppb)) +
  geom_line() +
  scale_y_log10() +
  labs(x = "Time",
       y = "Dye (ppb)")

dye_plot_ctd <- ggplot(uw_dye_df, aes(DateTime_UTC, Dye_ppb)) +
  geom_point() +
  geom_line() +
  scale_y_log10() +
  labs(x = "Time",
       y = "Dye (ppb)")

temp_plot <- ggplot(uw_dye_df, aes(DateTime_UTC, Temp1_C)) +
  geom_line() +
  labs(x = "Time",
       y = "Temp (C)")
sal_plot <- ggplot(uw_dye_df, aes(DateTime_UTC, Salinity_PSU)) +
  geom_line() +
  labs(x = "Time",
       y = "Salinity (PSU)")
ta_plot <- ggplot(uw_dye_df, aes(DateTime_UTC, Corrected_TA_umol_kg_)) +
  geom_point(shape = 1) +
  labs(x = "Time",
       y = expression(paste(TA ~ (μmol ~ kg^-1))))

(dye_plot + temp_plot) / (sal_plot + ta_plot)
```

# Maps

### Underway

```{r}
# Outline map
map_data = map_data("usa")

head(uw_dye_df)

myscaler <- function(x, from, to) {
  high=1.2
  low=0.1
  ifelse(x<low,0,ifelse(x>high,1,(x-low)/(high-low)))
}


# Plot 
ggplot() + 
  geom_map(data = map_data, map = map_data,
           aes(long, lat, map_id = region),
           fill = "white", color = "black") +
  geom_point(data = uw_dye_df, 
             aes(x = Longitude, y = Latitude, color = log10(Dye_ppb)),
             size = .4) +
  scale_color_viridis_c(option = "D",
                        name = "Dye (log ppb)",
                        #trans = scales::log10_trans(),
                        rescaler = myscaler) +
  xlim(-70.8, -70.6) +
  ylim(41.01, 41.15) +
  coord_quickmap() +
  ggtitle("Dye") +
  xlab("Longitude") +
  ylab("Latitude")
  
```

```{r}
ggplot() + 
  geom_map(data = map_data, map = map_data,
           aes(long, lat, map_id = region),
           fill = "white", color = "black") +
  geom_point(data = uw_dye_df, 
             aes(x = Longitude, y = Latitude, color = Salinity_PSU),
             size = .4) +
  scale_color_viridis_c(option = "D") +
  xlim(-70.8, -70.6) +
  ylim(41.01, 41.15) +
  coord_quickmap() +
  ggtitle("Salinity") +
  xlab("Longitude") +
  ylab("Latitude")
```

```{r}
ggplot() + 
  geom_map(data = map_data, map = map_data,
           aes(long, lat, map_id = region),
           fill = "white", color = "black") +
  geom_point(data = uw_dye_df, 
             aes(x = Longitude, y = Latitude, color = Temp1_C),
             size = .4) +
  scale_color_viridis_c(option = "B",
                        name = "Temp (C)") +
  xlim(-70.8, -70.6) +
  ylim(41.01, 41.15) +
  coord_quickmap() +
  ggtitle("Temperature") +
  xlab("Longitude") +
  ylab("Latitude")
```

```{r}
cruise_TA <- uw_df |> 
  filter(!is.na(Corrected_TA_umol_kg_)) |> 
ggplot() + 
  geom_map(data = map_data, map = map_data,
           aes(long, lat, map_id = region),
           fill = "white", color = "black") +
  geom_point(aes(x = Longitude, y = Latitude, color = Corrected_TA_umol_kg_),
             size = 2) +
  scale_color_viridis_c(option = "D",
                        name = expression(paste(TA ~ (μmol ~ kg^-1)))) +
  xlim(-72.1, -70.4) +
  ylim(40.5, 41.5) +
  coord_quickmap() +
  ggtitle("Alkalinity") +
  xlab("Longitude") +
  ylab("Latitude")

dye_TA <- uw_dye_df |>  
  filter(!is.na(Corrected_TA_umol_kg_)) |> 
  ggplot() +
  geom_map(data = map_data, map = map_data,
           aes(long, lat, map_id = region),
           fill = "white", color = "black") +
  geom_point(aes(x = Longitude, y = Latitude, color = Corrected_TA_umol_kg_),
             size = 2, shape = 1) +
  scale_color_viridis_c(option = "D",
                        name = expression(paste(TA ~ (μmol ~ kg^-1)))) +
  xlim(-70.8, -70.6) +
  ylim(41.01, 41.15) +
  coord_quickmap() +
  ggtitle("Alkalinity") +
  xlab("Longitude") +
  ylab("Latitude")

cruise_TA + dye_TA
```

### Drifters

```{r}
  ggplot() +
  geom_point(data = uw_dye_df, 
             aes(x = Longitude, y = Latitude, color = log10(Dye_ppb)),
             size = .4) +
  geom_point(data = filter(drifter_df, !is.na(sensor_ppb)), aes(longitude, latitude, shape = asset, color = sensor_ppb)) +
  scale_color_viridis_c(option = "D",
                        name = "Dye (log ppb)",
                        #trans = scales::log10_trans(),
                        rescaler = myscaler) +
  geom_point() +
  coord_quickmap()
```

```{r}
drifter_df |> 
  filter(!is.na(sensor_ppb)) |> 
  ggplot(aes(date_time_utc, sensor_ppb)) +
  geom_line(data = uw_dye_df, aes(DateTime_UTC, Dye_ppb), color = "lightblue") +
  geom_point() +
  scale_y_log10() +
  facet_grid(rows = vars(asset))
```
